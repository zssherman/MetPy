

.. _sphx_glr_examples_formats_GINI_Water_Vapor.py:


GINI Water Vapor Imagery
========================

Use MetPy's support for GINI files to read in a water vapor satellite image and plot the
data using CartoPy.



.. code-block:: python

    import cartopy.crs as ccrs
    import cartopy.feature as cfeature
    import matplotlib.pyplot as plt

    from metpy.cbook import get_test_data
    from metpy.io import GiniFile
    from metpy.plots import add_metpy_logo, add_timestamp, ctables








.. code-block:: python


    # Open the GINI file from the test data
    f = GiniFile(get_test_data('WEST-CONUS_4km_WV_20151208_2200.gini'))
    print(f)





.. rst-class:: sphx-glr-script-out

 Out::

    GiniFile: GOES-15 West CONUS WV (6.5/6.7 micron)
            Time: 2015-12-08 22:00:19
            Size: 1280x1100
            Projection: lambert_conformal
            Lower Left Corner (Lon, Lat): (-133.4588, 12.19)
            Resolution: 4km



.. code-block:: python


    # Get a Dataset view of the data (essentially a NetCDF-like interface to the
    # underlying data). Pull out the data, (x, y) coordinates, and the projection
    # information.
    ds = f.to_dataset()
    x = ds.variables['x'][:]
    y = ds.variables['y'][:]
    dat = ds.variables['WV']
    proj_var = ds.variables[dat.grid_mapping]
    print(proj_var)





.. rst-class:: sphx-glr-script-out

 Out::

    <class 'metpy.io.cdm.Variable'>: int32 Lambert_Conformal()
            grid_mapping_name: lambert_conformal_conic
            standard_parallel: 25.0
            longitude_of_central_meridian: -95.0
            latitude_of_projection_origin: 25.0
            earth_radius: 6371200.0



.. code-block:: python


    # Create CartoPy projection information for the file
    globe = ccrs.Globe(ellipse='sphere', semimajor_axis=proj_var.earth_radius,
                       semiminor_axis=proj_var.earth_radius)
    proj = ccrs.LambertConformal(central_longitude=proj_var.longitude_of_central_meridian,
                                 central_latitude=proj_var.latitude_of_projection_origin,
                                 standard_parallels=[proj_var.standard_parallel],
                                 globe=globe)








.. code-block:: python


    # Plot the image
    fig = plt.figure(figsize=(10, 12))
    add_metpy_logo(fig, 125, 145)
    ax = fig.add_subplot(1, 1, 1, projection=proj)
    wv_norm, wv_cmap = ctables.registry.get_with_range('WVCIMSS', 100, 260)
    wv_cmap.set_under('k')
    im = ax.imshow(dat[:], cmap=wv_cmap, norm=wv_norm,
                   extent=ds.img_extent, origin='upper')
    ax.add_feature(cfeature.COASTLINE.with_scale('50m'))
    add_timestamp(ax, f.prod_desc.datetime, y=0.02, high_contrast=True)

    plt.show()



.. image:: /examples/formats/images/sphx_glr_GINI_Water_Vapor_001.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.381 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: GINI_Water_Vapor.py <GINI_Water_Vapor.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: GINI_Water_Vapor.ipynb <GINI_Water_Vapor.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
